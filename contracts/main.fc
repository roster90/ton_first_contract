#include "imports/stdlib.fc";

() recv_internal( int msg_value, cell in_msg_full, slice in_msg_body) impure {
   slice cs = in_msg_full.begin_parse();
   int flasg = cs~load_uint(4);
   int msg_something = cs~load_uint(4);
   slice sender_address = cs~load_msg_addr();

    int op = in_msg_body~load_uint(32);
    if(op == 1){
      

        slice ds = get_data().begin_parse();
        int counter_value = ds~load_uint(32);
        
         set_data(begin_cell().store_uint(counter_value + 1, 32).store_slice(sender_address).end_cell());
        ;; counter  logic is comming
        ;; set_data(begin_cell().store_slice(sender_address).end_cell());
    }

   
}

(int, slice) get_the_contract_store_data() method_id {
    slice ds = get_data().begin_parse();
    return (   
        ds~load_uint(32),
        ds~load_msg_addr()
    );
}


slice get_sum_tol() method_id {
    slice ds = get_data().begin_parse();
    return ds~load_msg_addr();
}


